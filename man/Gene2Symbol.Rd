% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Gene2Symbol-methods.R
\name{Gene2Symbol}
\alias{Gene2Symbol}
\alias{Gene2Symbol,DataFrame-method}
\alias{Gene2Symbol,GenomicRanges-method}
\title{Gene-to-symbol mappings}
\usage{
Gene2Symbol(object, ...)

\S4method{Gene2Symbol}{DataFrame}(
  object,
  format = c("makeUnique", "1:1", "unmodified"),
  quiet = FALSE
)

\S4method{Gene2Symbol}{GenomicRanges}(object, ...)
}
\arguments{
\item{object}{Object.}

\item{format}{\code{character(1)}.
Formatting method to apply:
\itemize{
\item \code{"makeUnique"}: \emph{Recommended.} Apply \code{make.unique} to the \code{geneName}
column. Gene names are made unique, while the identifiers remain
unmodified. \code{NA} gene names will be renamed to \code{"unannotated"}.
\item \code{"1:1"}: For gene names that map to multiple gene identifiers, select
only the first annotated gene identifier. Incomplete elements with
\code{NA} gene name will be removed will be removed with an internal
\code{complete.cases} call.
\item \code{"unmodified"}: Return \code{geneId} and \code{geneName} columns unmodified, in
long format. Incomplete elements with \code{NA} gene name will be removed
with an internal \code{complete.cases} call.
}}

\item{quiet}{\code{logical(1)}.
Perform command quietly, suppressing messages.}

\item{...}{Arguments pass through to \code{DataFrame} method.}
}
\value{
\code{Gene2Symbol}.
}
\description{
Gene-to-symbol mappings
}
\note{
For some organisms, gene identifiers and gene names do not map 1:1
(e.g. \emph{Homo sapiens} and \emph{Mus musculus}). Refer to the \code{format} argument
here in the documentation for approaches that deal with this issue.

For the \code{format} argument, note that "long" was used instead of
"unmodified" prior to v0.10.10.

Updated 2021-10-18.
}
\examples{
data(GenomicRanges, package = "AcidTest")

## DataFrame ====
df <- DataFrame(
    "geneId" = c(
        "ENSG00000228572.7",
        "ENSG00000182378.14"
    ),
    "geneName" = c(
        "AL954722.1",
        "PLCXD1"
    )
)
x <- Gene2Symbol(df)
print(x)

## GenomicRanges ====
object <- GenomicRanges
x <- Gene2Symbol(object)
}
\seealso{
\code{\link[=makeGene2Symbol]{makeGene2Symbol()}}.
}
