% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/export-methods.R
\name{export}
\alias{export}
\alias{export,Tx2Gene,character,missingOrNULL-method}
\alias{export,Tx2Gene,missingOrNULL,character-method}
\alias{export,Tx2Gene,missingOrNULL,missingOrNULL-method}
\title{Export}
\usage{
export(object, con, format, ...)

\S4method{export}{Tx2Gene,character,missingOrNULL}(object, con, format, ...)

\S4method{export}{Tx2Gene,missingOrNULL,character}(object, con, format, ...)

\S4method{export}{Tx2Gene,missingOrNULL,missingOrNULL}(object, con, format, ...)
}
\arguments{
\item{object}{Object.
An object supporting \code{dim()}, or a supported class capable of being coerced
to \code{data.frame}, to be written to disk.}

\item{con}{\code{character(1)}, \code{missing}, or \code{NULL}.
File path.
Alternatively, can leave unset and use \code{ext} and \code{dir} arguments instead.}

\item{format}{\code{character(1)}, \code{missing}, or \code{NULL}.
Output file format extension.}

\item{...}{Additional arguments.}
}
\value{
Invisible \code{character}.
File path(s).
}
\description{
Export
}
\details{
The \code{Tx2Gene} method automatically disables writing of column names, which
is the intended input format for tximport.
}
\note{
Updated 2021-10-21.
}
\examples{
object <- S4Vectors::DataFrame(
    "txId" = c(
        "tx0001",
        "tx0002",
        "tx0003",
        "tx0004"
    ),
    "geneId" = c(
        "gene0001",
        "gene0001",
        "gene0002",
        "gene0002"
    )
)
object <- Tx2Gene(object)
con <- file.path(AcidBase::tempdir2(), "tx2gene.csv")
export(object = object, con = con)
x <- readLines(con, n = 4L)
print(x)
AcidBase::unlink2(con)
}
